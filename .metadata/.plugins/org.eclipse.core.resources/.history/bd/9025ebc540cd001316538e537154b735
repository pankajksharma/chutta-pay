package com.example.chuttapay;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.ActivityNotFoundException;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.Toast;

public class RegistrationFragment extends Fragment
{
	private String m_mobile, m_json, m_password = null;
	private String m_filePath = null;

	private static final String LOG_TAG = "RegFragment";

	@Override
	public View onCreateView( LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState )
	{
		final View rootView = inflater.inflate( R.layout.fragment_registration, container, false );
		
		return rootView;
	}

	

	
	private void beginUpload( final RegistrationListener listener )
	{
		final ProgressDialog pd = new ProgressDialog( getActivity() );
		pd.setTitle( "Registering..." );
		pd.setCancelable( false );
		pd.show();
		Thread t = new Thread( new Runnable()
		{
			@Override
			public void run()
			{
				boolean successful = false;
				HttpClient httpclient = new DefaultHttpClient();
				HttpPost httppost = new HttpPost( "http://107.161.27.22:5000/api/upload" );
				try
				{
					MultipartEntityBuilder builder = MultipartEntityBuilder.create();
					builder.addTextBody( "name", m_name );
					builder.addTextBody( "email", m_email );
					builder.addTextBody( "mobile", m_mobile );
					if( m_json != null )
					{
						File file = new File( "/sdcard/shinetempjson.txt" );
						PrintWriter pw = new PrintWriter( file );
						pw.write( m_json );
						pw.close();
						builder.addPart( "file", new FileBody( file ) );
						Log.v( LOG_TAG, "Json:" + m_json );
					}
					else if( m_filePath != null )
					{
						File pdfFile = new File( m_filePath );
						Log.v( LOG_TAG, "Adding file: " + m_filePath + "File exists: " + pdfFile.exists() );
						builder.addPart( "file", new FileBody( pdfFile ) );
					}
					else
						Log.v( LOG_TAG, "File path and json null" );

					httppost.setEntity( builder.build() );
					HttpResponse response = httpclient.execute( httppost );
					Log.e( "test", "SC:" + response.getStatusLine().getStatusCode() );
					BufferedReader reader = new BufferedReader( new InputStreamReader( response.getEntity()
							.getContent(), "UTF-8" ) );
					String s = "", temp; // TODO use SB
					while( ( temp = reader.readLine() ) != null )
					{
						s += temp;
					}
					if( pd != null && pd.isShowing() )
					{
						pd.dismiss();
					}
					if( s.contains( "success" ) ) // hammad?
					{
						successful = true;
						m_json = m_filePath = null;
						getActivity().getSupportFragmentManager().beginTransaction()
						.remove( RegistrationFragment.this ).add( R.id.container, new SuccessFragment() ).commit();
					}
					else
					{
						// TODO
					}
					Log.v( LOG_TAG, "Response: " + s );
				}
				catch( ClientProtocolException e )
				{
				}
				catch( IOException e )
				{
				}
				finally
				{
					if( listener != null )
						listener.onUploadFinished( successful );
				}
			}
		} );
		t.start();
	}

	private static interface RegistrationListener
	{
		public void onUploadFinished( boolean registrationSuccessful );
	}
}
